---
AWSTemplateFormatVersion: 2010-09-09
Description: Calligre EC2 CF Stack
Parameters:
  Auth0ClientId: 
    Description: "Auth0 Client ID"
    Type: String
  Auth0SecretId: 
    Description: "Auth0 Secret Id"
    Type: String
  Domain: 
    Description: "Domain that the server should respond to"
    Type: String
  InstanceType: 
    Default: t2.micro
    Description: "Instance type to host the conference on"
    Type: String
  Keypair: 
    Default: calligre
    Description: "EC2 Keypair to associate with the Instance"
    Type: String
  Route53HostedZoneId:
    Default: Z1D0AWFN0I54UQ
    Description: The Route 53 Domain you want to host the website on
    Type: String
  RdsAdminPassword: 
    Description: "The RDS admin account password"
    NoEcho: true
    Type: String
  RdsAdminUser: 
    Default: calligreadmin
    Description: "The RDS admin account user name"
    Type: String
  RdsDbName: 
    Default: calligre
    Description: "Database name to use"
    Type: String
  RdsPassword: 
    Default: postgres
    Description: "An unpriviledged user account for normal operations (Default is postgres)"
    NoEcho: true
    Type: String
  RdsUser: 
    Default: calligre
    Description: "An unpriviledged user account for normal operations"
    Type: String
  SentryDsn: 
    Description: "Sentry DSN (optional, captures errors if you want)"
    Type: String
  OutputPrefix:
    Description: String to prepend each stack so the outputs are unique
    Default: Calligre
    Type: String
Mappings: 
  RegionMap: # https://aws.amazon.com/amazon-linux-ami/#Amazon_Linux_AMI_IDs
    us-east-1: 
      ami: "ami-0b33d91d"
    us-east-2:
      ami: "ami-c55673a0"
    us-west-1: 
      ami: "ami-165a0876"
    us-west-2:
      ami: "ami-f173cc91"
    eu-west-1: # Ireland
      ami: "ami-70edb016"
    eu-west-2: # London
      ami: "ami-f1949e95"
Resources:
  Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          sources:
            /home/ec2-user/calligre-ansible-role: https://github.com/calligre/calligre-ansible-role/tarball/master
          files:
            /home/ec2-user/calligre.yml:
              content: |
                - hosts: localhost
                  become: true
                  roles:
                    - role: calligre-ansible-role
              encoding: plain
              group: ec2-user
              mode: "000644"
              owner: ec2-user
            /home/ec2-user/calligre-ansible-role/vars/main.yml:
              content: !Sub 
                - |
                  auth0_client_id: ${Auth0ClientId}
                  auth0_secret_id: ${Auth0SecretId}
                  aws_region: ${AWS::Region}
                  calligre_domain: ${Domain}
                  db_admin_password: ${RdsAdminPassword}
                  db_admin_user: ${RdsAdminUser}
                  db_base: ${RdsDbName}
                  db_host: ${RdsInstance.Endpoint.Address}
                  db_password: ${RdsPassword}
                  db_port: ${RdsInstance.Endpoint.Port}
                  db_user: ${RdsUser}
                  external_post_sns_topic: ${ExternalPostSnsTopic}
                  flagged_posts_table: ${FlaggedPostsTable}
                  posts_table: ${PostsTable}
                  profile_pic_bucket: ${ProfilePicsBucket}
                  resize_bucket: ${ImagePendingResizeBucket}
                  sentry_dsn: ${SentryDsn}
                  upload_bucket: ${ImageBucket}
                - ExternalPostSnsTopic: 
                    Fn::ImportValue:
                     !Join ["-", [!Ref OutputPrefix, ExternalPostSnsTopic]]
                  FlaggedPostsTable: 
                    Fn::ImportValue:
                     !Join ["-", [!Ref OutputPrefix, FlaggedPostsTable]]
                  ImageBucket: 
                    Fn::ImportValue:
                     !Join ["-", [!Ref OutputPrefix, ImageBucket]]
                  ImagePendingResizeBucket: 
                    Fn::ImportValue:
                     !Join ["-", [!Ref OutputPrefix, ImagePendingResizeBucket]]
                  ProfilePicsBucket: 
                    Fn::ImportValue:
                     !Join ["-", [!Ref OutputPrefix, ProfilePicsBucket]]
                  PostsTable: 
                    Fn::ImportValue:
                     !Join ["-", [!Ref OutputPrefix, PostsTable ]]
              encoding: plain 
              group: ec2-user
              mode: "000644"
              owner: ec2-user
          commands:
            1-install-ansible:
              command: pip -q install ansible
            2-run-ansible:
              command:  /usr/local/bin/ansible-playbook -i "localhost," -c local calligre.yml
              cwd: /home/ec2-user
    Properties:
      DisableApiTermination: false
      IamInstanceProfile: !Ref Ec2InstanceProfile
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", ami]
      InstanceInitiatedShutdownBehavior: stop
      InstanceType: !Ref InstanceType
      KeyName: !Ref Keypair
      Monitoring: false
      NetworkInterfaces:
      - DeleteOnTermination: true
        Description: Primary network interface
        DeviceIndex: 0
        SubnetId: 
          Fn::ImportValue:
           !Join ["-", [!Ref OutputPrefix, "AzASubnet"]]
        GroupSet: 
        - 
          Fn::ImportValue:
           !Join ["-", [!Ref OutputPrefix, "CalligreSecurityGroup"]]
      Tags:
      - Key: Name
        Value: !Join ["-", [!Ref OutputPrefix, "calligre-instance"]]
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash -xe
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource Instance --region ${AWS::Region}
  Ec2IamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
  CalligreIamPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "s3:*"
            Resource: "*"
          - Effect: "Allow"
            Action: "sns:*"
            Resource: "*"
          - Effect: "Allow"
            Action: "dynamodb:*"
            Resource: "*"
      PolicyName: Calligre-Instance-Policy
      Roles:
        - Ref: Ec2IamRole
  Ec2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - Ref: Ec2IamRole
  ElasticIp:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  ElasticIpAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt ElasticIp.AllocationId
      InstanceId: !Ref Instance
  R53Domain:
    Type: "AWS::Route53::RecordSet"
    Properties:
      HostedZoneId: !Ref Route53HostedZoneId
      Name: !Ref Domain
      ResourceRecords:
        - !Ref ElasticIp
      TTL: 300
      Type: A
  RdsInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      DBInstanceClass: db.t2.micro
      Port: 5432
      PubliclyAccessible: false
      StorageType: gp2
      BackupRetentionPeriod: 28
      MasterUsername: !Ref RdsAdminUser
      MasterUserPassword: !Ref RdsAdminPassword
      PreferredBackupWindow: 04:00-04:30
      PreferredMaintenanceWindow: sat:05:00-sat:05:30
      DBName: calligre
      Engine: postgres
      EngineVersion: 9.5.4
      LicenseModel: postgresql-license
      DBSubnetGroupName: 
        Fn::ImportValue:
         !Join ["-", [!Ref OutputPrefix, "DbSubnetGroup"]]
      VPCSecurityGroups:
      - Fn::ImportValue:
         !Join ["-", [!Ref OutputPrefix, CalligreDbSecurityGroup]]
      Tags:
      - Key: Name
        Value: !Join ["-", [!Ref OutputPrefix, calligre-rds-instance]]
